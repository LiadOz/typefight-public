* Backend
** DONE fix user caller into a good pardigm
it needs to have if and elif without else
** DONE add pending changes feature
** DONE figure out how to correctly emit changes in UsersManager
  the backend will own a broadcaster which is given to it by the server
** DONE make socket communication with user only outgoing and ingoing
the data of a request will tell what function should be called
** TODO change from namespaces into rooms
[[https://stackoverflow.com/questions/48036955/socket-io-switching-namespaces][link]]
** TODO find where to put the word generator
** TODO in order to login instead of going thru /data{num} you need to use only /
** TODO create tests for regiters
** TODO rework registers to only subclass
** TODO have a class that allows the player to view it's data
** TODO Register Users
use profanity-filter python package

* Backend features
** TODO When defending the attacks can refresh
as you type keys the first attack will move out until it is gone

* Frontend 
** TODO socket on "connect" problem
reconnection causes problems should be design change also in backend
** TODO Fix Typescript relative imports
** TODO Use glow and bloom filters
https://pixijs.io/pixi-filters/docs/PIXI.filters.html

* Frontend additional features
** TODO Menus can be activated by typing the word
** TODO Typing a word in menu makes it raised

* Create Production
** DONE use CDN for Pixi.js
http://hippocurious.com/setup-a-cdn-to-speed-up-your-website
** TODO flask
[[https://flask.palletsprojects.com/en/1.1.x/deploying/#deployment][link]]
** TODO create production gulp task

